*** MAKE AN ANACONDA ENV ~ this doesn't work with regular python env's; they aren't complete

as of 6/13/24, with cuda 12.5 and cudnn 9.1.1, you need a specific visual studio version or it won't build correctly
https://github.com/opencv/opencv/issues/25689#issuecomment-2151447870

So, install latest visual studio, then use this to downgrade (run cmd as administrator):
"C:\Program Files (x86)\Microsoft Visual Studio\Installer\setup.exe" modify --installPath "C:\Program Files\Microsoft Visual Studio\2022\Community" --add Microsoft.VisualStudio.Component.VC.14.36.17.6.x86.x64 --passive

add opencv and the contrib as git submodules (git submodule add ...)

get cuda toolkit and then get the cuDNN files (using CUDA 12.5 and cuDNN 9.1.1)

run both installers

make sure the locations are in path

open cmake and put in path of source and build folder

check/enter these: ** might have to click configure before finding some cuda options
What to do in cmake: ***NOTE Click on `Advanced` ~ can't see some w/o it on

"C:/Program Files/CMake/bin/cmake.exe" -H "D:/programming/fanduel-boggle-cheat/opencv" 
-B"D:\programming\fanduel-boggle-cheat\opencv\build" 
-G"Visual Studio 17 2022" 

-D OPENCV_EXTRA_MODULES_PATH="D:/programming/fanduel-boggle-cheat/opencv_contrib/modules"
-D PYTHON3_INCLUDE_DIR="C:/Users/evank/anaconda3/envs/opencv_cuda_cudnn/include"
-D PYTHON3_LIBRARY="C:/Users/evank/anaconda3/envs/opencv_cuda_cudnn/libs/python311.lib"
-D PYTHON3_EXECUTABLE="C:/Users/evank/anaconda3/envs/opencv_cuda_cudnn/python.exe"
-D PYTHON3_NUMPY_INCLUDE_DIRS="C:/Users/evank/anaconda3/envs/opencv_cuda_cudnn/Lib/site-packages/numpy/core/include"
-D PYTHON3_PACKAGES_PATH="C:/Users/evank/anaconda3/envs/opencv_cuda_cudnn/Lib/site-packages"
-D INSTALL_TESTS=ON 
-D INSTALL_C_EXAMPLES=ON 
-D BUILD_EXAMPLES=ON 
-D BUILD_opencv_world=ON 
-D WITH_CUDA=ON
-D ENABLE_FAST_MATH=ON
-D OPENCV_DNN_CUDA=ON
-D BUILD_opencv_dnn=ON
-D BUILD_opencv_python3=ON
Configure, then (if it detects wrong verison of cuda, replace all 12.1 with 12.5 for ex):
-D CUDA_GENERATION=Pascal
-D CUDNN_LIBRARY="C:/Program Files/NVIDIA/CUDNN/v9.1/lib/12.4/x64/cudnn.lib"
Configure, then:
-D CUDNN_INCLUDE_DIR="C:/Program Files/NVIDIA/CUDNN/v9.1/include/12.4"
-D ENABLE_CUDA_FIRST_CLASS_LANGUAGE=ON 
-D CUDA_FAST_MATH=ON 
-D CUDA_ARCH_BIN=7.5
-D WITH_NVCUVENC=OFF
-D WITH_NVCUVID=OFF

7.5 is the compute compatability for a 1660 ti

Click on `Configure' - Pray to god there are no errors.

Then click `Generate'

Then click `Open Project'

If Visual Studio prompts you to install some C++ stuff, do it

Once it's done, click on ALL_BUILD under CMakeTargets

Then change it from `Debug` to `Release'

Turn off anti-virus so it doesn't snag shit

Then right-click on the ALL_BUILD file and click `Build'

Pray to god there are no errors.

Then right-click on the INSTALL file and click `Build`

Pray to god there are no errors.






